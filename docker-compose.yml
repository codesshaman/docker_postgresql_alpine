services:
  postgresdb:
    image: $POSTGRES_IMAGE
    container_name: $POSTGRES_NAME
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      # If your wanna nopass authentication, 
      # you can use the following option:
      # POSTGRES_HOST_AUTH_METHOD: "trust"
    restart: unless-stopped
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d:z
      - db-volume:/var/lib/postgresql/data:z
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "$POSTGRES_PORT:5432"
    networks:
      network:
        ipv4_address: $POSTGRES_HOST

  ######### PGADMIN 4 WEB GUI #########
  ########uncommit if necessary########
  # pgadmin:
  #   image: $PGADMIN_IAMGE
  #   container_name: $PGADMIN_NAME
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: $PGADMIN_EMAIL
  #     PGADMIN_DEFAULT_PASSWORD: $PGADMIN_PASSWORD
  #   restart: unless-stopped
  #   depends_on:
  #     - postgresdb
  #   ports:
  #     - "$PGADMIN_PORT:80"
  #   networks:
  #     network:
  #       ipv4_address: $PGADMIN_HOST

networks:
  network:
    name: $NETWORK_NAME
    external: true
    driver: bridge
    ipam:
      config:
        - subnet: $NETWORK_ADDR
          gateway: $NETWORK_GATE

volumes:
  db-volume:
    driver_opts:
      o: bind
      type: none
      device: $DB_VOLUME
